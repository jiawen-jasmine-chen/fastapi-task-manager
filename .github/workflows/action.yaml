name: Docker Hub Push

on:
  push:
    branches: ["main","shared-list-rough","Frontendtk"]
    paths:
      - "backend/**"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      MESSAGE: ${{ steps.commit.outputs.MESSAGE }}
      AUTHOR: ${{ steps.commit.outputs.AUTHOR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit info
        id: commit
        run: |
          MESSAGE=$(git show -s --format='%s')
          AUTHOR=$(git show -s --format='%an')

          echo "MESSAGE=$MESSAGE" >> "$GITHUB_OUTPUT"
          echo "AUTHOR=$AUTHOR" >> "$GITHUB_OUTPUT"
 
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags,labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: benjaminstrandberg123/pss-backend

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            benjaminstrandberg123/pss-backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_vm:
    name: Deploy to VM
    needs: push_to_registry
    runs-on: ubuntu-latest
    env:
      MESSAGE: ${{ needs.push_to_registry.outputs.MESSAGE }}
      AUTHOR: ${{ needs.push_to_registry.outputs.AUTHOR }}
    steps:
      - name: SSH into VM and restart backend deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            sudo kubectl rollout restart deployment backend

      - name: Discord notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"ðŸŽ‰ðŸš€ **Deployment Successful!** ðŸš€ðŸŽ‰\n**Commit:** \`$MESSAGE\`\n**By:** \`$AUTHOR\`\"}" \
            https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      - name: Discord notification on failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"ðŸ˜­ðŸ’© **Deployment Failed, check the logs...** ðŸ’©ðŸ˜­\n**Commit:** \`$MESSAGE\`\n**By:** \`$AUTHOR\`\"}" \
            https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      
      